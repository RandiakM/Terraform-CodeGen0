const { MongoClient } = require('mongodb');

exports.handler = async function(event, context) {
  // Handle OPTIONS request for CORS
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 204,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Allow-Methods': 'GET, OPTIONS'
      }
    };
  }

  let client;
  try {
    client = await MongoClient.connect(process.env.MONGODB_URI);
    const db = client.db();
    
    const generatedFiles = await db.collection('generated_files')
      .find()
      .toArray();
    
    // Sort files by type to ensure consistent order
    const sortedFiles = generatedFiles.sort((a, b) => {
      const order = ['vpc', 'subnet', 'igw', 'nat', 'route-table'];
      return order.indexOf(a.type) - order.indexOf(b.type);
    });

    let finalTerraformCode = `# Terraform Configuration
# Generated by Terraform Code Generator

provider "aws" {
  region = "us-west-2"  # Default region, can be overridden
}

`;

    for (const file of sortedFiles) {
      finalTerraformCode += `# ${file.type.toUpperCase()} Configuration\n`;
      finalTerraformCode += file.code;
      finalTerraformCode += '\n\n';
    }

    return {
      statusCode: 200,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Allow-Methods': 'GET, OPTIONS'
      },
      body: JSON.stringify({
        success: true,
        code: finalTerraformCode,
        message: 'Final Terraform configuration generated successfully'
      })
    };
  } catch (error) {
    console.error('Error generating final Terraform code:', error);
    return {
      statusCode: 500,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type'
      },
      body: JSON.stringify({ 
        success: false, 
        error: 'Failed to generate final Terraform code',
        details: error.message 
      })
    };
  } finally {
    if (client) {
      await client.close();
    }
  }
};

